class Program
{
    /*
     ( 는 쇠막대기의 시작
     ) 는 쇠막대기의 끝
     () 는 레이저 (반드시 한쌍으로 붙어있어야 함)
     */
    
    /* ()(((()())(())()))(())
       () <- 레이저
        (
         (
          ( <- 스택 : (((
           () <- 레이저 막대기 조각 3                        <- 사실 정확한 작동은 ((((
            () <- 레이저 막대기 조각 3 + "3" = 6                                     ) -> 오잉? ) 들어왔네
              )  막대기 끝 스택 : ((                                                   -> 바로 전꺼 확인해봐
              ( <- 스택 : (((                                                         -> 오잉? (랑 붙어있네?
               () 레이저 막대기 조각 6 + "3" = 9                                        -> 그럼 넌 막대기가 아니고 레이저여
                 ) <- 스택 : ((                                                        -> ( 하나 팝하고 스택에 들어있는 만큼 즉 여기선 (((, 스택의 카운트를 더해줌
                 () 레이저, 막대기 조각 9 + "2" = 11
                   ) <- 스택 : (
                    ) <- 스택 : null
                     ( <- 스택 : (
                      () 레이저, 막대기 조각 11 + "1" = 12
                        ) <- 스택 : null                   
                        
    여기서 막대기 갯수 만큼 더해 줌
    -> 막대기가 끝날 때 마다 +1 해주면 되겠네
    막대기가 5개니깐 12 + "5" = 17
     */
    static void Main()
    {
        string input = Console.ReadLine();
        Stack<char> stack = new Stack<char>();
        int result = 0;

        for (int i = 0; i < input.Length; i++)
        {
            if (input[i] == '(')
            {
                stack.Push('(');
            }
            else // )
            {
                stack.Pop(); // 막대기 종료 or 레이저 ( 제거

                if (input[i - 1] == '(')
                {
                    // 레이저인 경우
                    result += stack.Count;
                }
                else
                {
                    // 막대기 종료인 경우
                    result += 1;

                    // 첨에 레이저 아닌 ( 갯수로 판정 할랬는데 판정문 조건 귀찮을꺼 같아서
                    // 짜피 레이저 인지 판정하는 곳 있으니깐
                    // 레이저 아니라고 판정되면 짜피 막대의 끝이니깐 여기서 +1 해주는 걸로 구현
                }
            }
        }

        Console.WriteLine(result);
    }
}
